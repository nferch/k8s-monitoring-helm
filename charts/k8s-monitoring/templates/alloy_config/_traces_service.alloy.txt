{{ define "alloy.config.tracesService" }}
// Tempo
{{- if not (and .Values.externalServices.tempo.hostFrom .Values.externalServices.tempo.basicAuth.usernameFrom .Values.externalServices.tempo.basicAuth.passwordFrom .Values.externalServices.tempo.basicAuth.tenantIdFrom )}}
remote.kubernetes.secret "traces_service" {
  name = {{ include "kubernetes_monitoring.traces_service.secret.name" . | quote }}
  namespace = {{ .Values.externalServices.tempo.secret.namespace | default .Release.Namespace | quote }}
}
{{- end }}

{{- with .Values.externalServices.tempo }}
{{ if eq .authMode "basic" }}
otelcol.auth.basic "traces_service" {
  {{- if .basicAuth.usernameFrom }}
  username = {{ .basicAuth.usernameFrom }}
  {{- else }}
  username = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .basicAuth.usernameKey | quote }}])
  {{- end }}
  {{- if .basicAuth.passwordFrom }}
  password = {{ .basicAuth.passwordFrom }}
  {{- else }}
  password = remote.kubernetes.secret.traces_service.data[{{ .basicAuth.passwordKey | quote }}]
  {{- end }}
}
{{- end }}
{{ if eq .protocol "otlp" }}
otelcol.exporter.otlp "traces_service" {
{{- else if eq .protocol "otlphttp" }}
otelcol.exporter.otlphttp "traces_service" {
{{- end }}
  client {
    {{- if .hostFrom }}
    endpoint = {{ .hostFrom }}
    {{- else }}
    endpoint = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .hostKey | quote }}])
    {{- end }}
{{ if eq .authMode "basic" }}
    auth = otelcol.auth.basic.traces_service.handler
{{- end }}
    {{- if .tenantIdFrom }}
    headers = { "X-Scope-OrgID" = coalesce({{ .tenantIdFrom }}, "") }
    {{- else if or (and (eq .secret.create true) (.tenantId)) (eq .secret.create false) }}
    headers = { "X-Scope-OrgID" = nonsensitive(coalesce(remote.kubernetes.secret.traces_service.data[{{ .tenantIdKey | quote }}], "")) }
    {{- end }}
{{- if .tlsOptions }}
    tls {
{{ .tlsOptions | indent 6 }}
    }
{{- else if .tls }}
    tls {
    {{- range $k, $v := .tls }}
      {{ $k }} = {{ $v | toJson }}
    {{- end }}
    }
{{- end }}
  }
}
{{- end }}
{{ end }}
